{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["const API_KEY = '46051568-7c86afd7f3b7df8cfe693777e'; \nconst BASE_URL = 'https://pixabay.com/api/';\n\nexport const fetchImages = async (query) => {\n    const response = await fetch(`${BASE_URL}?key=${API_KEY}&q=${query}&image_type=photo&orientation=horizontal&safesearch=true`);\n    if (!response.ok) {\n        throw new Error('Error fetching images');\n    }\n    const data = await response.json();\n    return data.hits;\n};","export const renderGallery = (images) => {\n    const gallery = document.querySelector('.gallery');\n    gallery.innerHTML = ''; \n\n    if (images.length === 0) {\n        iziToast.error({\n            message: \"Sorry, there are no images matching your search query. Please try again!\",\n        });\n        return;\n    }\n\n    const markup = images.map(({ webformatURL, largeImageURL, tags, likes, views, comments, downloads }) => `\n        <div class=\"gallery-item\">\n            <a href=\"${largeImageURL}\">\n                <img src=\"${webformatURL}\" alt=\"${tags}\" />\n            </a>\n            <div class=\"image-info\">\n                <span>Likes: ${likes}</span>\n                <span>Views: ${views}</span>\n                <span>Comments: ${comments}</span>\n                <span>Downloads: ${downloads}</span>\n            </div>\n        </div>\n    `).join('');\n\n    gallery.innerHTML = markup;\n\n    \n    const lightbox = new SimpleLightbox('.gallery a', {\n        captionDelay: 250,\n        captionsData: 'alt', \n    });\n    lightbox.refresh();\n};","import { fetchImages } from './js/pixabay-api.js';\nimport { renderGallery } from './js/render-functions.js';\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\n\nconst searchForm = document.querySelector('.search-form');\nconst loader = document.querySelector('.loader'); \n\nsearchForm.addEventListener('submit', async (event) => {\n    event.preventDefault();\n\n    const query = searchForm.elements.query.value.trim();\n    if (!query) {\n        return; \n    }\n\n    loader.classList.remove('hidden'); \n\n    try {\n        const images = await fetchImages(query);\n        renderGallery(images);\n    } catch (error) {\n        console.error(error);\n        iziToast.error({ message: \"Error fetching images.\" });\n    } finally {\n        loader.classList.add('hidden'); \n    }\n});"],"names":["API_KEY","BASE_URL","fetchImages","query","response","renderGallery","images","gallery","markup","webformatURL","largeImageURL","tags","likes","views","comments","downloads","searchForm","loader","event","error","iziToast"],"mappings":"svBAAA,MAAMA,EAAU,qCACVC,EAAW,2BAEJC,EAAc,MAAOC,GAAU,CACxC,MAAMC,EAAW,MAAM,MAAM,GAAGH,CAAQ,QAAQD,CAAO,MAAMG,CAAK,0DAA0D,EAC5H,GAAI,CAACC,EAAS,GACV,MAAM,IAAI,MAAM,uBAAuB,EAG3C,OADa,MAAMA,EAAS,QAChB,IAChB,ECVaC,EAAiBC,GAAW,CACrC,MAAMC,EAAU,SAAS,cAAc,UAAU,EAGjD,GAFAA,EAAQ,UAAY,GAEhBD,EAAO,SAAW,EAAG,CACrB,SAAS,MAAM,CACX,QAAS,0EACrB,CAAS,EACD,MACH,CAED,MAAME,EAASF,EAAO,IAAI,CAAC,CAAE,aAAAG,EAAc,cAAAC,EAAe,KAAAC,EAAM,MAAAC,EAAO,MAAAC,EAAO,SAAAC,EAAU,UAAAC,CAAW,IAAK;AAAA;AAAA,uBAErFL,CAAa;AAAA,4BACRD,CAAY,UAAUE,CAAI;AAAA;AAAA;AAAA,+BAGvBC,CAAK;AAAA,+BACLC,CAAK;AAAA,kCACFC,CAAQ;AAAA,mCACPC,CAAS;AAAA;AAAA;AAAA,KAGvC,EAAE,KAAK,EAAE,EAEVR,EAAQ,UAAYC,EAGH,IAAI,eAAe,aAAc,CAC9C,aAAc,IACd,aAAc,KACtB,CAAK,EACQ,QAAO,CACpB,ECzBMQ,EAAa,SAAS,cAAc,cAAc,EAClDC,EAAS,SAAS,cAAc,SAAS,EAE/CD,EAAW,iBAAiB,SAAU,MAAOE,GAAU,CACnDA,EAAM,eAAc,EAEpB,MAAMf,EAAQa,EAAW,SAAS,MAAM,MAAM,OAC9C,GAAKb,EAIL,CAAAc,EAAO,UAAU,OAAO,QAAQ,EAEhC,GAAI,CACA,MAAMX,EAAS,MAAMJ,EAAYC,CAAK,EACtCE,EAAcC,CAAM,CACvB,OAAQa,EAAO,CACZ,QAAQ,MAAMA,CAAK,EACnBC,EAAS,MAAM,CAAE,QAAS,wBAA0B,CAAA,CAC5D,QAAc,CACNH,EAAO,UAAU,IAAI,QAAQ,CAChC,EACL,CAAC"}